#!/bin/sh

# Source function library
. /etc/rc.d/init.d/functions

GLITE_LOCATION=${GLITE_LOCATION:-/opt/glite}
GLITE_LOCATION_VAR=${GLITE_LOCATION_VAR:-${GLITE_LOCATION}/var}

[ -f $GLITE_LOCATION/etc/blparser.conf ] && . $GLITE_LOCATION/etc/blparser.conf

pidfile=$GLITE_LOCATION_VAR/glite-blparserlsf.pid

GLITE_CE_BLPARSERLSF=${GLITE_LOCATION}/bin/BLParserLSF

start()
{
        [ -n "$GLITE_CE_BLPARSERLSF_DAEMON" ] && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -D`
        [ -n "$GLITE_CE_BLPARSERLSF_DEBUG" ]  && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -d`
        [ -n "$GLITE_CE_BLPARSERLSF_DEBUGLOGFILE" ]  && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -l $GLITE_CE_BLPARSERLSF_DEBUGLOGFILE`
        [ -n "$GLITE_CE_BLPARSERLSF_BINPATH" ]  && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -b $GLITE_CE_BLPARSERLSF_BINPATH`
        [ -n "$GLITE_CE_BLPARSERLSF_CONFPATH" ]  && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -c $GLITE_CE_BLPARSERLSF_CONFPATH`
        [ ! -n "$GLITE_CE_BLPARSERLFS_NUM" ] && GLITE_CE_BLPARSERLFS_NUM=1

        i=1
	while (( i <= $GLITE_CE_BLPARSERLFS_NUM ));do

             GLITE_CE_BLPARSERLSF_CMDIN=$GLITE_CE_BLPARSERLSF_CMDLINE

             portval=`echo GLITE_CE_BLPARSERLFS_PORT${i}`
             eval portnum=\$$portval
             creamportval=`echo GLITE_CE_BLPARSERLFS_CREAMPORT${i}`
             eval creamportnum=\$$creamportval
	     
	     [ -n "$portnum" ] && GLITE_CE_BLPARSERLFS_CMDIN=`echo $GLITE_CE_BLPARSERLFS_CMDIN -p $portnum`
	     [ -n "$creamportnum" ] && GLITE_CE_BLPARSERLFS_CMDIN=`echo $GLITE_CE_BLPARSERLFS_CMDIN -m $creamportnum`
             
	     $GLITE_CE_BLPARSERLFS $GLITE_CE_BLPARSERLFS_CMDIN
	     
	     [ "$?" -eq 0 ] && success $"startup" || failure $" startup" 
        
	     echo
	     let i=$i+1
	     
        done
	
	echo `pidofproc ${GLITE_CE_BLPARSERLFS}` > $pidfile 
	
}

stop()
{
	if [ -f $pidfile ]; then
		pid=`cat $pidfile`
		kill $pid
		[ "$?" -eq 0 ] && success $"${GLITE_CE_BLPARSERLSF} shutdown" || failure $"${GLITE_CE_BLPARSERLSF} shutdown" 
                echo ""
		rm -f $pidfile
	else
		echo $pidfile does not exist - ${GLITE_CE_BLPARSERLSF} not running? >&2
		return 1
	fi
}

status()
{
	if [ -f $pidfile ]; then
		pid=`cat $pidfile`
		if ps p $pid >/dev/null 2>&1; then
			echo ${GLITE_CE_BLPARSERLSF} running as $pid 
			return 0
		fi
	fi

	echo ${GLITE_CE_BLPARSERLSF} not running
	return 1
}

case x$1 in
	xstart)	start;;
	xstop)	stop;;
	xrestart) stop; start;;
	xstatus) status;;
	x*)	echo usage: $0 start,stop,restart,status >&2
		exit 1;;
esac

