#!/bin/sh

# Source function library
. /etc/rc.d/init.d/functions

GLITE_LOCATION=${GLITE_LOCATION:-/opt/glite}
GLITE_LOCATION_VAR=${GLITE_LOCATION_VAR:-${GLITE_LOCATION}/var}

[ -f $GLITE_LOCATION/etc/blparser.conf ] && . $GLITE_LOCATION/etc/blparser.conf

pidfile=$GLITE_LOCATION_VAR/glite-blparserlsf.pid

GLITE_CE_BLPARSERLSF=${GLITE_LOCATION}/bin/BLParserLSF

start()
{
        [ -n "$GLITE_CE_BLPARSERLSF_DAEMON" ] && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -D`
        [ -n "$GLITE_CE_BLPARSERLSF_DEBUG" ]  && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -d`
        [ -n "$GLITE_CE_BLPARSERLSF_BINPATH" ]  && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -b $GLITE_CE_BLPARSERLSF_BINPATH`
        [ -n "$GLITE_CE_BLPARSERLSF_CONFPATH" ]  && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -c $GLITE_CE_BLPARSERLSF_CONFPATH`
        if [ -n "$GLITE_CE_BLPARSERLSF_NUM" ]; then
	
	      for ((i=1;i<=$GLITE_CE_BLPARSERLSF_NUM;i++)); do
	      
	           GLITE_CE_BLPARSERLSF_CMDIN=$GLITE_CE_BLPARSERLSF_CMDLINE
	      
                   portval=`echo GLITE_CE_BLPARSERLSF_PORT${i}`;
                   eval portnum=\$$portval
                   creamportval=`echo GLITE_CE_BLPARSERLSF_CREAMPORT${i}`;
                   eval creamportnum=\$$creamportval
		   
	           [ -n "$portnum" ] && GLITE_CE_BLPARSERLSF_CMDIN=`echo $GLITE_CE_BLPARSERLSF_CMDIN -p $portnum`
	           [ -n "$creamportnum" ] && GLITE_CE_BLPARSERLSF_CMDIN=`echo $GLITE_CE_BLPARSERLSF_CMDIN -m $creamportnum`
                   
		   $GLITE_CE_BLPARSERLSF $GLITE_CE_BLPARSERLSF_CMDIN
	           
		   [ "$?" -eq 0 ] && success $"startup" || failure $" startup" 
        
	           echo

	        
	      done
	      
	      echo `pidofproc ${GLITE_CE_BLPARSERLSF}` > $pidfile 
	      
	
	else
              
              [ -n "$GLITE_CE_BLPARSERLSF_PORT" ]  && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -p $GLITE_CE_BLPARSERLSF_PORT`
              [ -n "$GLITE_CE_BLPARSERLSF_CREAMPORT" ]  && GLITE_CE_BLPARSERLSF_CMDLINE=`echo $GLITE_CE_BLPARSERLSF_CMDLINE -m $GLITE_CE_BLPARSERLSF_CREAMPORT`
	      
	      $GLITE_CE_BLPARSERLSF $GLITE_CE_BLPARSERLSF_CMDLINE
	      
	      [ "$?" -eq 0 ] && success $"startup" || failure $" startup" 
        
	      echo

	      echo `pidofproc ${GLITE_CE_BLPARSERLSF}` > $pidfile 
   
        fi	      
}

stop()
{
	if [ -f $pidfile ]; then
		pid=`cat $pidfile`
		kill $pid
		[ "$?" -eq 0 ] && success $"${GLITE_CE_BLPARSERLSF} shutdown" || failure $"${GLITE_CE_BLPARSERLSF} shutdown" 
                echo ""
		rm -f $pidfile
	else
		echo $pidfile does not exist - ${GLITE_CE_BLPARSERLSF} not running? >&2
		return 1
	fi
}

status()
{
	if [ -f $pidfile ]; then
		pid=`cat $pidfile`
		if ps p $pid >/dev/null 2>&1; then
			echo ${GLITE_CE_BLPARSERLSF} running as $pid 
			return 0
		fi
	fi

	echo ${GLITE_CE_BLPARSERLSF} not running
	return 1
}

case x$1 in
	xstart)	start;;
	xstop)	stop;;
	xrestart) stop; start;;
	xstatus) status;;
	x*)	echo usage: $0 start,stop,restart,status >&2
		exit 1;;
esac

